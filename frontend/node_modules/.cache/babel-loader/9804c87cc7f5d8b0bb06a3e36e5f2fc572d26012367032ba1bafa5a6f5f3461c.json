{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandt\\\\Desktop\\\\ReactAssignmentSet4\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\n;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/eventss');\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({message: 'Could not fetch events.'}), {status: 500});\n    throw new Response('haha', {\n      status: 500,\n      statusText: 'Could not fetch events.'\n    });\n  } else {\n    // const resData = await response.json();   //these statements are not needed with react router\n    // return resData.events;                   //react router returns the data part of the Response constructor\n    console.log(response);\n    console.log(response.json());\n    return response; //we can return the 'response' directly\n  }\n}\n\n;\n\n//any browser API's can be executed within the loader function, for example: access local storage, \n//access cookies, you can do anything you can do in normal javascript code.\n//What you cannot do is use React hooks because this is not a react component\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Response","status","statusText","console","log","json","$RefreshReg$"],"sources":["C:/Users/Brandt/Desktop/ReactAssignmentSet4/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData();\r\n    const events = data.events;\r\n\r\n    return <EventsList events={events} />;\r\n};\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:8080/eventss');\r\n\r\n    if (!response.ok) {\r\n        // throw new Response(JSON.stringify({message: 'Could not fetch events.'}), {status: 500});\r\n        throw new Response('haha', {status: 500, statusText: 'Could not fetch events.'});\r\n    } else {\r\n        // const resData = await response.json();   //these statements are not needed with react router\r\n        // return resData.events;                   //react router returns the data part of the Response constructor\r\n        console.log(response);\r\n        console.log(response.json());\r\n        return response;                            //we can return the 'response' directly\r\n    }\r\n};\r\n\r\n//any browser API's can be executed within the loader function, for example: access local storage, \r\n//access cookies, you can do anything you can do in normal javascript code.\r\n//What you cannot do is use React hooks because this is not a react component"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGN,aAAa,EAAE;EAC5B,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBAAOJ,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACzC;AAACN,EAAA,CALQD,UAAU;EAAA,QACFJ,aAAa;AAAA;AAAAY,EAAA,GADrBR,UAAU;AAKlB;AAED,eAAeA,UAAU;AAEzB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA,MAAM,IAAIC,QAAQ,CAAC,MAAM,EAAE;MAACC,MAAM,EAAE,GAAG;MAAEC,UAAU,EAAE;IAAyB,CAAC,CAAC;EACpF,CAAC,MAAM;IACH;IACA;IACAC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IACrBM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,IAAI,EAAE,CAAC;IAC5B,OAAOR,QAAQ,CAAC,CAA4B;EAChD;AACJ;;AAAC;;AAED;AACA;AACA;AAAA,IAAAF,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}